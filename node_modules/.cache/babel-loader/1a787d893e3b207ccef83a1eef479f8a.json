{"ast":null,"code":"var _jsxFileName = \"/Users/erunfernando/coding_projects/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = {\n  'backlog': [],\n  'up-next': [],\n  'done': []\n};\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const handleDragEnd = result => {\n    // TODO: handle drag and drop\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: Object.entries(tasks).map(([columnId, tasks], index) => /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: columnId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: columnId,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(Card, {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: task.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 27\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 23\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, columnId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SvIK8d5WT9y/c+LCOG3LNPDmSmQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","Card","Button","Container","Row","Col","jsxDEV","_jsxDEV","initialTasks","App","_s","tasks","setTasks","handleDragEnd","result","onDragEnd","children","Object","entries","map","columnId","index","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","ref","innerRef","droppableProps","task","draggableId","id","draggableProps","dragHandleProps","Body","Title","title","Text","description","placeholder","_c","$RefreshReg$"],"sources":["/Users/erunfernando/coding_projects/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\n\nconst initialTasks = {\n  'backlog': [],\n  'up-next': [],\n  'done': []\n};\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialTasks);\n\n  const handleDragEnd = (result) => {\n    // TODO: handle drag and drop\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Container>\n        <Row>\n          {Object.entries(tasks).map(([columnId, tasks], index) => (\n            <Col key={columnId}>\n              <h2>{columnId}</h2>\n              <Droppable droppableId={columnId}>\n                {(provided) => (\n                  <div ref={provided.innerRef} {...provided.droppableProps}>\n                    {tasks.map((task, index) => (\n                      <Draggable key={task.id} draggableId={task.id} index={index}>\n                        {(provided) => (\n                          <Card ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                            <Card.Body>\n                              <Card.Title>{task.title}</Card.Title>\n                              <Card.Text>{task.description}</Card.Text>\n                            </Card.Body>\n                          </Card>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}