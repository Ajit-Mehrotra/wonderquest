{"version":3,"sources":["App.js","index.js"],"names":["App","tasks","setTasks","useState","showDoneDone","setShowDoneDone","useEffect","fetch","headers","then","response","ok","Error","concat","status","json","data","newTasks","records","forEach","record","task","id","fields","Name","Notes","Size","Value","Urgency","showDescription","Status","push","_jsx","DragDropContext","onDragEnd","result","destination","source","draggableId","droppableId","index","start","finish","splice","newRankingManual","length","method","body","JSON","stringify","console","log","catch","error","newStatus","children","Container","Row","Object","entries","map","_ref","columnId","_jsxs","Col","md","style","display","justifyContent","alignItems","Form","Check","type","label","checked","onChange","Droppable","provided","ref","innerRef","droppableProps","Draggable","Card","draggableProps","dragHandleProps","Body","Title","Badge","pill","className","Button","variant","onClick","toggleDescription","taskId","prevTasks","FaCaretDown","FaCaretLeft","_Fragment","Text","placeholder","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c2ddb87.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Card, Button, Badge, Container, Row, Col, Form } from 'react-bootstrap';\nimport { FaCaretDown, FaCaretUp, FaCaretLeft } from 'react-icons/fa';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState({ 'Priority Backlog': [], 'Today': [], 'Done Done': [] });\n  const [showDoneDone, setShowDoneDone] = useState(true);\n\n  useEffect(() => {\n    fetch('https://api.airtable.com/v0/appVXFJJlBFs4nDeq/Design%20Projects?filterByFormula=OR(%7BStatus%7D=\\'Priority%20Backlog\\',%7BStatus%7D=\\'Today\\',%7BStatus%7D=\\'Done%20Done\\')&sort%5B0%5D%5Bfield%5D=Ranking%20Final&sort%5B0%5D%5Bdirection%5D=desc', {\n      headers: {\n        'Authorization': 'Bearer patCRuvQNJDTr3dWj.a91f0bad66dc0006062fafebee44d99d20233350c1bc9cbfedcf70eab3283b44'\n      }\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      const newTasks = { 'Priority Backlog': [], 'Today': [], 'Done Done': [] };\n      data.records.forEach(record => {\n        const task = {\n          id: record.id,\n          fields: {\n            Name: record.fields.Name,\n            Notes: record.fields.Notes || '',\n            Size: record.fields.Size,\n            'Ranking Final': record.fields['Ranking Final'],\n            Value: record.fields.Value, // Add this line\n            Urgency: record.fields.Urgency // Add this line\n          },\n          showDescription: false\n        };\n        if (newTasks[record.fields.Status]) {\n          newTasks[record.fields.Status].push(task);\n        }\n      });\n      setTasks(newTasks);\n    });\n  }, []);\n\n  const handleDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = tasks[source.droppableId];\n    const finish = tasks[destination.droppableId];\n    const task = start.splice(source.index, 1)[0];\n\n    if (destination.droppableId === source.droppableId) {\n      // Moving within the same column\n      finish.splice(destination.index, 0, task);\n\n      let newRankingManual;\n      if (destination.index === 0) {\n        // Moved to the top\n        newRankingManual = finish[1].fields['Ranking Final'] + 1;\n      } else if (destination.index === finish.length - 1) {\n        // Moved to the bottom\n        newRankingManual = finish[finish.length - 2].fields['Ranking Final'] - 1;\n      } else {\n        // Moved in between\n        newRankingManual = (finish[destination.index - 1].fields['Ranking Final'] + finish[destination.index + 1].fields['Ranking Final']) / 2;\n      }\n\n      task.fields['Ranking Manual'] = newRankingManual;\n\n      fetch(`https://api.airtable.com/v0/appVXFJJlBFs4nDeq/Design%20Projects/${draggableId}`, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': 'Bearer patCRuvQNJDTr3dWj.a91f0bad66dc0006062fafebee44d99d20233350c1bc9cbfedcf70eab3283b44',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fields: {\n            'Ranking Manual': newRankingManual\n          }\n        })\n      })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(error => console.error(error));\n    } else {\n      // Moving to a different column\n      finish.splice(destination.index, 0, task);\n      const newStatus = destination.droppableId === 'Done' ? 'Done Done' : destination.droppableId;\n\n      fetch(`https://api.airtable.com/v0/appVXFJJlBFs4nDeq/Design%20Projects/${draggableId}`, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': 'Bearer patCRuvQNJDTr3dWj.a91f0bad66dc0006062fafebee44d99d20233350c1bc9cbfedcf70eab3283b44',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fields: {\n            Status: newStatus\n          }\n        })\n      })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(error => console.error(error));\n    }\n\n    setTasks({\n      ...tasks,\n      [source.droppableId]: start,\n      [destination.droppableId]: finish,\n    });\n  ;\n\n    const newStatus = destination.droppableId === 'Done' ? 'Done Done' : destination.droppableId;\n    fetch(`https://api.airtable.com/v0/appVXFJJlBFs4nDeq/Design%20Projects/${draggableId}`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer patCRuvQNJDTr3dWj.a91f0bad66dc0006062fafebee44d99d20233350c1bc9cbfedcf70eab3283b44',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        fields: {\n          Status: newStatus\n        }\n      })\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(error => console.error(error));\n  };\n\n  const toggleDescription = (taskId) => {\n    setTasks(prevTasks => {\n      const newTasks = { ...prevTasks };\n      for (let columnId in newTasks) {\n        newTasks[columnId] = newTasks[columnId].map(task => {\n          if (task.id === taskId) {\n            return { ...task, showDescription: !task.showDescription };\n          }\n          return task;\n        });\n      }\n      return newTasks;\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Container>\n        <Row>\n          {Object.entries(tasks).map(([columnId, tasks], index) => (\n            <Col key={columnId} md={4}>\n              <h2>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  {columnId}\n                  {columnId === 'Done Done' && (\n                    <Form.Check \n                      type=\"switch\"\n                      id=\"done-done-toggle\"\n                      label=\"\"\n                      checked={showDoneDone}\n                      onChange={() => setShowDoneDone(!showDoneDone)}\n                    />\n                  )}\n                </div>\n              </h2>\n              <Droppable droppableId={columnId}>\n                {(provided) => (\n                  <div ref={provided.innerRef} {...provided.droppableProps}>\n                    {tasks.map((task, index) => (\n                      (columnId !== 'Done Done' || showDoneDone) && (\n                        <Draggable key={task.id} draggableId={task.id} index={index}>\n                          {(provided) => (\n                            <Card ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                              <Card.Body>\n                                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                  <Card.Title>{task.fields.Name}</Card.Title>\n                                  <div>\n                                    <Badge pill className=\"size-badge\">{task.fields.Size}</Badge>\n                                    <Button variant=\"link\" onClick={() => toggleDescription(task.id)}>\n                                      {task.showDescription ? <FaCaretDown /> : <FaCaretLeft />}\n                                    </Button>\n                                  </div>\n                                </div>\n                                {task.showDescription && (\n                                  <>\n                                    <Card.Text>{task.fields.Notes}</Card.Text>\n                                    <div>\n                                      <span className=\"badge-label\">Urgency: </span>\n                                      <Badge pill className=\"urgency-badge\">{task.fields.Urgency}</Badge>\n                                    </div>\n                                    <div>\n                                      <span className=\"badge-label\">Value: </span>\n                                      <Badge pill className=\"value-badge\">{task.fields.Value}</Badge>\n                                    </div>\n                                  </>\n                                )}\n                              </Card.Body>\n                            </Card>\n                          )}\n                        </Draggable>\n                      )\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}